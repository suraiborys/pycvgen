# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    ".idea",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "alembic",
]

# Same as Black.
line-length = 120
indent-width = 4

# Assume Python 3.12
target-version = "py312"

[lint]
select = ["ALL"]
ignore = [
    #### modules
    #    "ANN", # flake8-annotations
    #    "COM", # flake8-commas
    #    "C90", # mccabe complexity
    #    "DJ",  # django
    #    "EXE", # flake8-executable
    #    "T10", # debugger
    #    "TID", # flake8-tidy-imports
    "RUF001", # String contains ambiguous `–ê` (CYRILLIC CAPITAL LETTER A). Did you mean `A` (LATIN CAPITAL LETTER A)?
    "A002", # Argument is shadowing a Python builtin
    "A005", # Module {name} is shadowing a Python builtin module
    "A001", # Variable `id` is shadowing a Python builtin
    "ANN401", # Dynamically typed expressions (typing.Any) are disallowed in `v`
    "B008", # Do not perform function calls in argument defaults
    "BLE001", # Do not catch blind exception: `Exception`
    "EM101", # Exception must not use a string literal, assign to variable first
    "EM102", # Exception must not use an f-string literal, assign to variable first
    "E402", # false positives for local imports
    "E501", # line too long
    "FBT001", # Boolean-typed positional argument in function definition
    "FA102", # Missing `from __future__ import annotations`, but uses PEP 585 collection
    "FA100", # Add `from __future__ import annotations` to simplify `typing.Optional`
    "FIX002", # too verbose descriptions of todos
    "S101", # ignore use of assert
    "S311", # Standard pseudo-random generators are not suitable for cryptographic purposes
    "S608", #  Possible SQL injection vector through string-based query construction
    "COM812", # Trailing comma missing
    "CPY001", # Checks for the absence of copyright notices within Python files.
    "RET504", # Unnecessary assignment to variable before `return` statement
    "ISC001",
    "D211",
    "D203",
    "D100", # ignore missing docs
    "D101",
    "D102",
    "D103",
    "D104",
    "D105",
    "D106",
    "D107",
    "D200",
    "D205",
    "D212",
    "D400",
    "D401",
    "D415",
    "DOC201", # Checks for functions with explicit returns missing a "returns" section in their docstring.
    #    "TD003",
    "TRY003", # Avoid specifying long messages outside the exception class
    "TD002", # Missing author in TODO; try: # TODO(<author_name>): ... or # TODO @<author_name>: ...
    "PLR2004", # Ignore lint rule about magic numbers
    "PLR6301", # Method {method_name} could be a function, class method, or static method
    "PLW0108", # Lambda may be unnecessary; consider inlining inner function
    "PGH003", # Use specific rule codes when ignoring type issues

]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[lint.mccabe]
max-complexity = 10

[lint.per-file-ignores]
"tests/*" = ["ALL"]
